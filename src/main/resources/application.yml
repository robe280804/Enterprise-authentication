server:
  port: 8080

spring:
  application:
    name: authentication

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: true

  datasource:
    url: jdbc:mysql://localhost:3306/${DB_NAME}?createDatabaseIfNotExist=true
    username: ${DB_USER}
    password: ${DB_PASS}

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
    show_sql: true
    properties:
      hibernate:
        format_sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  redis:
    host: localhost
    port: 6379

  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"  # permette di deserializzare
      auto-offset-reset: earliest

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_ID}
            client-secret: ${OAUTH2_GOOGLE_SECRET}
            scope:
              - email
              - profile

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    cache: false



jwt:
  secret: ${JWT_SECRET}
  expiration:
    access_token: 900000  # (TOKEN breve) scadenza 15 minuti
    refresh_token: 86400000 # (TOKEN lungo) scadenza 1 giorni
