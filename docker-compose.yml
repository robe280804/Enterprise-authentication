services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-spring-app
    ports:
      - "8443:8443"
    environment:
      DB_NAME: ${DB_NAME}
      DOCKER_DB_USERNAME: ${DOCKER_DB_USERNAME}
      DB_PASS: ${DB_PASS}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      HTTPS_PASSWORD: ${HTTPS_PASSWORD}
      OAUTH2_GOOGLE_ID: ${OAUTH2_GOOGLE_ID}
      OAUTH2_GOOGLE_SECRET: ${OAUTH2_GOOGLE_SECRET}
    depends_on:
      - redis
      - db
      - kafka

  redis:
    image: redis:7.2-alpine
    container_name: my-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes" ]


  zookeeper:
    image: zookeeper:3.8
    container_name: my-zookeeper
    ports:
      - "2181:2181"


  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: my-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper


  db:
    image: mysql:8.0
    container_name: my-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DOCKER_DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_HOST: "%"
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql

volumes:
  redis-data:
  db_data:
